package com.sanku.twofactorauth;

import android.support.annotation.NonNull;
import android.support.v7.app.AppCompatActivity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.widget.EditText;
import android.widget.Toast;

import com.google.android.gms.tasks.OnCompleteListener;
import com.google.android.gms.tasks.Task;
import com.google.firebase.FirebaseException;
import com.google.firebase.auth.AuthResult;
import com.google.firebase.auth.FirebaseAuth;
import com.google.firebase.auth.FirebaseAuthInvalidCredentialsException;
import com.google.firebase.auth.PhoneAuthCredential;
import com.google.firebase.auth.PhoneAuthProvider;

import java.util.concurrent.TimeUnit;


public class MainActivity extends AppCompatActivity {

    private FirebaseAuth mAuth;
    private EditText etUserPhonenumber, etUserCode;

    @Override
    protected void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.activity_main);
         mAuth = FirebaseAuth.getInstance();

        etUserPhonenumber = (EditText) findViewById(R.id.etUserPhonenumber);
        etUserCode = (EditText) findViewById(R.id.etUserCode);

    }


    public void btn_onCodeGenerateClick(View view) {
        String phoneNumber = etUserPhonenumber.getText().toString();
        if (phoneNumber == null)
            return;
        generateVarificationCode("+1"+phoneNumber);

    }

    private void generateVarificationCode(String phoneNumber) {
        PhoneAuthProvider.getInstance().verifyPhoneNumber(
                phoneNumber,        // Phone number to verify
                60,                 // Timeout duration
                TimeUnit.SECONDS,   // Unit of timeout
                this,               // Activity (for callback binding)
                mCallbacks);        // OnVerificationStateChangedCallbacks
    }

    PhoneAuthProvider.OnVerificationStateChangedCallbacks mCallbacks = new PhoneAuthProvider.OnVerificationStateChangedCallbacks() {
        @Override
        public void onVerificationCompleted(PhoneAuthCredential phoneAuthCredential) {
            Toast.makeText(MainActivity.this, "Code created..!", Toast.LENGTH_SHORT).show();


            signInWithPhoneAuthCredential(phoneAuthCredential);

        }

        @Override
        public void onVerificationFailed(FirebaseException e) {

        }

        @Override
        public void onCodeSent(String verificationId, PhoneAuthProvider.ForceResendingToken forceResendingToken) {

            // save this verificationId to global variable so that we can use it after


            CommonFunctions.VERIFICATION_ID = verificationId;

            Log.e("verification code", "." + verificationId);

            Toast.makeText(MainActivity.this, "Verification Code Sent..!", Toast.LENGTH_SHORT).show();
            super.onCodeSent(verificationId, forceResendingToken);
        }
    };


    public void btn_onCodeVerificationClick(View view) {
        checkUserAuth(etUserPhonenumber.getText().toString());
    }

    private void checkUserAuth(String userCode) {
        PhoneAuthCredential credential = PhoneAuthProvider.getCredential(CommonFunctions.VERIFICATION_ID, userCode);

        // varification code: the code that is generated by firebase, so we saved this to our common function class as global variable
        // code:   the code that user will enter

        // call signInWithPhoneAuthCredential method
        signInWithPhoneAuthCredential(credential);

    }


    private void signInWithPhoneAuthCredential(PhoneAuthCredential credential) {
        mAuth.signInWithCredential(credential)
                .addOnCompleteListener(this, new OnCompleteListener<AuthResult>() {
                    @Override
                    public void onComplete(@NonNull Task<AuthResult> task) {
                        if (task.isSuccessful()) {
                            Log.e("Success", "code matches");
                            Toast.makeText(MainActivity.this, "Code match", Toast.LENGTH_SHORT).show();
                        } else {
                            if (task.getException() instanceof FirebaseAuthInvalidCredentialsException) {
                                Log.e("err", ".");
                            }
                        }
                    }
                });
    }


}
